apiVersion: apps/v1
kind: Deployment
metadata:
  name: products
  namespace: rmalves
spec:
  replicas: 3
  selector:
    matchLabels:
      app: products
  template:                  # <-- corrigido: template é obrigatório
    metadata:
      labels:
        app: products
    spec:
      containers:
        - name: products    # <-- nome do container
          image: momosuke07/products:latest
          ports:
            - containerPort: 5001
          env:
            - name: DATABASE_URL
              value: postgresql://postgres:postgres@localhost:5432/meubanco
          # opcional: se precisar de variáveis extras ou volume mounts
          
        # Sidecar do PostgreSQL
        - name: postgres
          image: postgres:16
          ports:
            - containerPort: 5432
          env:
            - name: POSTGRES_USER
              value: postgres
            - name: POSTGRES_PASSWORD
              value: postgres
            - name: POSTGRES_DB
              value: meubanco
          volumeMounts:
            - name: postgres-data
              mountPath: /var/lib/postgresql/data

      volumes:
        - name: postgres-data
          emptyDir: {}   # dados não persistem, perfeito para testes/dev
---
apiVersion: v1
kind: Service
metadata:
  name: products
  namespace: rmalves
spec:
  selector:
    app: products
  ports:
    - protocol: TCP
      port: 5001
      targetPort: 5001
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend
  namespace: rmalves
spec:
  replicas: 1
  selector:
    matchLabels:
      app: backend
  template:
    metadata:
      labels:
        app: backend
    spec:
      containers:
        # Container da aplicação Flask
        - name: backend
          image: momosuke07/backend:latest
          ports:
            - containerPort: 5000
          env:
            - name: DATABASE_URL
              value: postgresql://postgres:postgres@localhost:5432/meubanco
          # opcional: se precisar de variáveis extras ou volume mounts
          
        # Sidecar do PostgreSQL
        - name: postgres
          image: postgres:16
          ports:
            - containerPort: 5432
          env:
            - name: POSTGRES_USER
              value: postgres
            - name: POSTGRES_PASSWORD
              value: postgres
            - name: POSTGRES_DB
              value: meubanco
          volumeMounts:
            - name: postgres-data
              mountPath: /var/lib/postgresql/data

      volumes:
        - name: postgres-data
          emptyDir: {}   # dados não persistem, perfeito para testes/dev

---
apiVersion: v1
kind: Service
metadata:
  name: backend
  namespace: rmalves
spec:
  selector:
    app: backend
  ports:
    - protocol: TCP
      port: 5000
      targetPort: 5000
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cart 
  namespace: rmalves 
spec:
  replicas: 1
  selector:
    matchLabels:
      app: cart 
  template:
    metadata:
      labels:
        app: cart 
    spec:
      containers:
        - name: cart
          image: momosuke07/cart:latest 
          ports:
            - containerPort: 5005
          env:
            - name: DATABASE_URL
              value: postgresql://postgres:postgres@localhost:5432/meubanco
        - name: postgres
          image: postgres:16
          ports:
            - containerPort: 5432
          env:
            - name: POSTGRES_USER
              value: postgres
            - name: POSTGRES_PASSWORD
              value: postgres
            - name: POSTGRES_DB
              value: meubanco
          volumeMounts:
            - name: postgres-data
              mountPath: /var/lib/postgresql/data

      volumes:
        - name: postgres-data
          emptyDir: {}   # dados não persistem, perfeito para testes/dev
---

apiVersion: v1
kind: Service
metadata:
  name: cart
  namespace: rmalves
spec:
  selector:
    app: cart
  ports:
    - protocol: TCP
      port: 5005
      targetPort: 5005
  type: ClusterIP
---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: payment
  namespace: rmalves
spec:
  replicas: 1
  selector:
    matchLabels:
      app: payment
  template:
    metadata:
      labels:
        app: payment
    spec:
      containers:
        - name: payment
          image: momosuke07/payment:latest
          ports:
            - containerPort: 5004

---

apiVersion: v1
kind: Service
metadata:
  name: payment
  namespace: rmalves
spec:
  selector:
    app: payment
  ports:
    - protocol: TCP
      port: 5004
      targetPort: 5004
  type: ClusterIP
---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: orders
  namespace: rmalves
spec:
  replicas: 1
  selector:
    matchLabels:
      app: orders
  template:
    metadata:
      labels:
        app: orders
    spec:
      containers:
        - name: orders
          image: momosuke07/orders:latest
          ports:
            - containerPort: 5002
          env:
            - name: DATABASE_URL
              value: postgresql://postgres:postgres@localhost:5432/meubanco
          # opcional: se precisar de variáveis extras ou volume mounts
          
        # Sidecar do PostgreSQL
        - name: postgres
          image: postgres:16
          ports:
            - containerPort: 5432
          env:
            - name: POSTGRES_USER
              value: postgres
            - name: POSTGRES_PASSWORD
              value: postgres
            - name: POSTGRES_DB
              value: meubanco
          volumeMounts:
            - name: postgres-data
              mountPath: /var/lib/postgresql/data

      volumes:
        - name: postgres-data
          emptyDir: {}   # dados não persistem, perfeito para testes/dev
---
apiVersion: v1
kind: Service
metadata:
  name: orders
  namespace: rmalves
spec:
  selector:
    app: orders
  ports:
    - protocol: TCP
      port: 5002
      targetPort: 5002
  type: ClusterIP
---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: checkout
  namespace: rmalves
spec:
  replicas: 1
  selector:
    matchLabels:
      app: checkout
  template:
    metadata:
      labels:
        app: checkout
    spec:
      containers:
        - name: checkout
          image: momosuke07/checkout:latest
          ports:
            - containerPort: 5003

---

apiVersion: v1
kind: Service
metadata:
  name: checkout
  namespace: rmalves
spec:
  selector:
    app: checkout
  ports:
    - protocol: TCP
      port: 5003
      targetPort: 5003
  type: ClusterIP
